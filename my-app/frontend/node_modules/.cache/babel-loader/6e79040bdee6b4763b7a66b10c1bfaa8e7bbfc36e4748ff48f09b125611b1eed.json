{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\WebApp\\\\my-app\\\\src\\\\components\\\\TestSpring.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Spring } from \"react-spring\";\nimport { withGesture } from \"react-with-gesture\";\n// import useSpring\nimport { useSpring, animated, useSpringRef, useTransition, config } from '@react-spring/web';\nimport { useState, useEffect } from \"react\";\nimport { transform } from \"framer-motion\";\nimport { Button } from \"@mui/material\";\nimport projectsInfo from '../files/projectsInfo.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestSpring(props) {\n  _s();\n  const data = props.data.slides;\n  const [activeIndex, setActiveIndex] = useState(0);\n  const handleClick = direction => {\n    if (direction === 'next') {\n      setActiveIndex((activeIndex + 1) % data.length);\n    }\n    // setActiveIndex((prevIndex) => {\n    //   if (direction === 'next') {\n    //     return (prevIndex + 1) % data.length;\n    //   }\n    //     // return (prevIndex + 1) % projectsInfo.length\n    // });\n  };\n  const transRef = useSpringRef();\n  const mod = (a, b) => {\n    return (a % b + b) % b;\n  };\n  const getPresentableData = () => {\n    const presentableData = [];\n    for (let i = -1; i < 2; i++) {\n      presentableData.push(data[mod(activeIndex + i, data.length)]);\n    }\n    return presentableData;\n  };\n  const presentableData = getPresentableData();\n\n  // transition for carousel\n  // const props = useSpring({\n  //    from: {opacity: 1, y: 0},\n  //    to: [\n  //     { opacity: 0, y: -20},\n  //     { opacity: 0, y: 10},\n  //     { opacity: 1, y: -5},\n  //     { opacity: 1, y: 0}\n  //    ],\n  //    config: {duration: 150, friction: 14, tension: 120},\n  //    ref: transRef\n  // });\n\n  const trans = useTransition(presentableData, {\n    from: {\n      opacity: 0,\n      y: 10\n    },\n    enter: {\n      opacity: 1,\n      y: 0\n    },\n    // {opacity: 0, y: 10},\n    // {opacity: 0.75, y: -5}, \n    leave: {\n      opacity: 0,\n      y: -10\n    },\n    ref: transRef,\n    // exitBeforeEnter: true,\n    // trail: 400 / data.length,\n    // config: {\n    //     duration: 250,\n    //     tension: 120,\n    //     friction: 14\n    // }\n    config: config.stiff\n  });\n  useEffect(() => {\n    transRef.start();\n  }, [activeIndex]);\n  return trans((style, index) => /*#__PURE__*/_jsxDEV(animated.div, {\n    style: {\n      ...style,\n      backgroundColor: 'white',\n      zIndex: '1',\n      position: 'relative'\n    },\n    onClick: () => {\n      handleClick('next');\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'black',\n        height: '100%',\n        textAlign: 'center'\n      },\n      children: index.content.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this));\n  // return (\n  // <div style={{height: '400px', width: '400px'}}>\n  // trans((style, index) => (\n  //   <animated.div style={{...style, backgroundColor: 'white', zIndex: '1', position: 'relative'}}>\n  //     <p style={{color: 'black', height: '100%', textAlign: 'center'}}>{index.content.name}</p>\n  //   </animated.div>\n  // ))\n  {/* <animated.div style={{...trans, height:'150px', backgroundColor: 'white', zIndex: '1', position: 'relative'}}>\r\n    <p style={{color: 'black', height: '100%', textAlign: 'center'}}>test1</p>\r\n   </animated.div>\r\n   <animated.div style={{...trans, height:'150px', backgroundColor: 'white', zIndex: '2', position: 'relative'}}>\r\n    <p style={{color: 'black', height: '100%', textAlign: 'center'}}>test2</p>\r\n   </animated.div>\r\n   <animated.div style={{...trans, height:'150px', backgroundColor: 'white', zIndex: '1', position: 'relative'}}>\r\n    <p style={{color: 'black', height: '100%', textAlign: 'center'}}>test3</p>\r\n   </animated.div> */}\n  /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => handleClick('next'),\n    children: \" click me \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 7\n  }, this);\n  // </div>\n  // );\n}\n_s(TestSpring, \"vg8MtfV887ciBRvv1tL05AmTLdE=\", false, function () {\n  return [useSpringRef, useTransition];\n});\n_c = TestSpring;\nexport default TestSpring;\nvar _c;\n$RefreshReg$(_c, \"TestSpring\");","map":{"version":3,"names":["React","styled","Spring","withGesture","useSpring","animated","useSpringRef","useTransition","config","useState","useEffect","transform","Button","projectsInfo","jsxDEV","_jsxDEV","TestSpring","props","_s","data","slides","activeIndex","setActiveIndex","handleClick","direction","length","transRef","mod","a","b","getPresentableData","presentableData","i","push","trans","from","opacity","y","enter","leave","ref","stiff","start","style","index","div","backgroundColor","zIndex","position","onClick","children","color","height","textAlign","content","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React Projects/WebApp/my-app/src/components/TestSpring.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Spring } from \"react-spring\";\r\nimport { withGesture } from \"react-with-gesture\";\r\n// import useSpring\r\nimport { useSpring, animated, useSpringRef, useTransition, config } from '@react-spring/web';\r\nimport { useState, useEffect } from \"react\";\r\nimport { transform } from \"framer-motion\";\r\nimport { Button } from \"@mui/material\";\r\nimport projectsInfo from '../files/projectsInfo.json';\r\n\r\nfunction TestSpring(props) {\r\n  const data = props.data.slides;\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  const handleClick = (direction) => {\r\n    if (direction === 'next') {\r\n      setActiveIndex((activeIndex + 1) % data.length);\r\n    }\r\n    // setActiveIndex((prevIndex) => {\r\n    //   if (direction === 'next') {\r\n    //     return (prevIndex + 1) % data.length;\r\n    //   }\r\n    //     // return (prevIndex + 1) % projectsInfo.length\r\n    // });\r\n  };\r\n\r\n  const transRef = useSpringRef();\r\n\r\n  const mod = (a, b) => {\r\n    return ((a % b) + b) % b;\r\n  }\r\n\r\n  const getPresentableData = () => {\r\n    const presentableData = [];\r\n    for (let i = -1; i < 2; i++) {\r\n      presentableData.push(data[mod(activeIndex + i, data.length)]);\r\n    }\r\n\r\n    return presentableData;\r\n  };\r\n\r\n  const presentableData = getPresentableData();\r\n\r\n  \r\n  // transition for carousel\r\n  // const props = useSpring({\r\n  //    from: {opacity: 1, y: 0},\r\n  //    to: [\r\n  //     { opacity: 0, y: -20},\r\n  //     { opacity: 0, y: 10},\r\n  //     { opacity: 1, y: -5},\r\n  //     { opacity: 1, y: 0}\r\n  //    ],\r\n  //    config: {duration: 150, friction: 14, tension: 120},\r\n  //    ref: transRef\r\n  // });\r\n\r\n  const trans = useTransition( presentableData, {\r\n    from: { opacity: 0, y: 10 },\r\n    enter: { opacity: 1, y: 0 },\r\n      // {opacity: 0, y: 10},\r\n      // {opacity: 0.75, y: -5}, \r\n    leave: { opacity: 0, y: -10 },\r\n    ref: transRef,\r\n    // exitBeforeEnter: true,\r\n    // trail: 400 / data.length,\r\n    // config: {\r\n    //     duration: 250,\r\n    //     tension: 120,\r\n    //     friction: 14\r\n    // }\r\n    config: config.stiff\r\n  });\r\n\r\n  useEffect(() => {\r\n    transRef.start();\r\n  }, [activeIndex]);\r\n\r\n  return trans((style, index) => (\r\n    <animated.div style={{...style, backgroundColor: 'white', zIndex: '1', position: 'relative'}} onClick={() => {handleClick('next')}}>\r\n      <p style={{color: 'black', height: '100%', textAlign: 'center'}}>{index.content.name}</p>\r\n    </animated.div>\r\n  ))\r\n  // return (\r\n    // <div style={{height: '400px', width: '400px'}}>\r\n      // trans((style, index) => (\r\n      //   <animated.div style={{...style, backgroundColor: 'white', zIndex: '1', position: 'relative'}}>\r\n      //     <p style={{color: 'black', height: '100%', textAlign: 'center'}}>{index.content.name}</p>\r\n      //   </animated.div>\r\n      // ))\r\n      {/* <animated.div style={{...trans, height:'150px', backgroundColor: 'white', zIndex: '1', position: 'relative'}}>\r\n        <p style={{color: 'black', height: '100%', textAlign: 'center'}}>test1</p>\r\n      </animated.div>\r\n      <animated.div style={{...trans, height:'150px', backgroundColor: 'white', zIndex: '2', position: 'relative'}}>\r\n        <p style={{color: 'black', height: '100%', textAlign: 'center'}}>test2</p>\r\n      </animated.div>\r\n      <animated.div style={{...trans, height:'150px', backgroundColor: 'white', zIndex: '1', position: 'relative'}}>\r\n        <p style={{color: 'black', height: '100%', textAlign: 'center'}}>test3</p>\r\n      </animated.div> */}\r\n      <Button onClick={() => handleClick('next')}> click me </Button>\r\n    // </div>\r\n  // );\r\n}\r\n\r\nexport default TestSpring;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}