{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\WebApp\\\\my-app\\\\src\\\\components\\\\ProjectContainer.js\";\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Divider from '@mui/material/Divider';\nimport { motion } from 'framer-motion';\nimport StackedNavbar from '../StackedNavbar';\nimport { useState } from 'react';\nimport projects from '../files/projects.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectContainer() {\n  //   const blue2 = getComputedStyle(document.body).getPropertyValue('--blue2');\n  //   const [section, setSection] = useState('project_1');\n\n  //   const changeSection = (section) => {\n  //     setSection(section);\n  //   };\n\n  //add currently selected section variable x\n  //add callback function from StackedNavbar.js to change the section x\n  //add currently selected section variable to the props of StackedNavbar.js  x\n  //add code to create new project container so that it can be dynamically created\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = ProjectContainer;\nexport default ProjectContainer;\nvar _c;\n$RefreshReg$(_c, \"ProjectContainer\");","map":{"version":3,"names":["Divider","motion","StackedNavbar","useState","projects","jsxDEV","_jsxDEV","ProjectContainer","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React Projects/WebApp/my-app/src/components/ProjectContainer.js"],"sourcesContent":["import '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Divider from '@mui/material/Divider';\r\nimport { motion } from 'framer-motion';\r\nimport StackedNavbar from '../StackedNavbar';\r\nimport { useState } from 'react';\r\nimport projects from '../files/projects.json';\r\n\r\nfunction ProjectContainer() {\r\n//   const blue2 = getComputedStyle(document.body).getPropertyValue('--blue2');\r\n//   const [section, setSection] = useState('project_1');\r\n\r\n//   const changeSection = (section) => {\r\n//     setSection(section);\r\n//   };\r\n\r\n  //add currently selected section variable x\r\n  //add callback function from StackedNavbar.js to change the section x\r\n  //add currently selected section variable to the props of StackedNavbar.js  x\r\n  //add code to create new project container so that it can be dynamically created\r\n\r\n  return (\r\n    <div className='project-container'>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectContainer;"],"mappings":";AAAA,OAAO,YAAY;AACnB,OAAO,sCAAsC;AAC7C,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,gBAAgBA,CAAA,EAAG;EAC5B;EACA;;EAEA;EACA;EACA;;EAEE;EACA;EACA;EACA;;EAEA,oBACED,OAAA;IAAKE,SAAS,EAAC;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7B,CAAC;AAEV;AAACC,EAAA,GAlBQN,gBAAgB;AAoBzB,eAAeA,gBAAgB;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}