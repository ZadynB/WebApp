{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\WebApp\\\\my-app\\\\src\\\\components\\\\AppGrid.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { animated, useSpringRef, useTransition } from '@react-spring/web';\nimport { useEffect } from \"react\";\nimport { Grid } from '@mui/material';\nimport AppTile from './AppTile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppGrid(props) {\n  _s();\n  const apps = props.apps;\n  const createAppTile = item => {\n    return /*#__PURE__*/_jsxDEV(AppTile, {\n      details: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  };\n\n  //transition\n  const transRef = useSpringRef();\n  const trans = useTransition(apps, {\n    ref: transRef,\n    trail: 400 / apps.length,\n    from: {\n      opacity: 0,\n      scale: 0\n    },\n    enter: {\n      opacity: 1,\n      scale: 1\n    },\n    leave: {\n      opacity: 0,\n      scale: 0\n    },\n    config: {\n      friction: 10,\n      tension: 120\n    }\n  });\n  useEffect(() => {\n    transRef.start();\n  }, [apps, transRef]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    columnSpacing: 1,\n    rowSpacing: 1,\n    children: trans((style, item) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: {\n          ...style\n        },\n        children: createAppTile(item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(AppGrid, \"Xkw2ccm9zIsTzxM7L+xVJY6+DZ4=\", false, function () {\n  return [useSpringRef, useTransition];\n});\n_c = AppGrid;\n;\nexport default AppGrid;\nvar _c;\n$RefreshReg$(_c, \"AppGrid\");","map":{"version":3,"names":["React","animated","useSpringRef","useTransition","useEffect","Grid","AppTile","jsxDEV","_jsxDEV","AppGrid","props","_s","apps","createAppTile","item","details","id","fileName","_jsxFileName","lineNumber","columnNumber","transRef","trans","ref","trail","length","from","opacity","scale","enter","leave","config","friction","tension","start","container","justifyContent","columnSpacing","rowSpacing","children","style","xs","md","div","_c","$RefreshReg$"],"sources":["D:/React Projects/WebApp/my-app/src/components/AppGrid.js"],"sourcesContent":["import React from \"react\";\r\nimport { animated, useSpringRef, useTransition } from '@react-spring/web';\r\nimport { useEffect } from \"react\";\r\nimport { Grid } from '@mui/material';\r\nimport AppTile from './AppTile';\r\n\r\nfunction AppGrid(props) {\r\n  const apps = props.apps;\r\n\r\n  const createAppTile = (item) => {\r\n    return (\r\n      <AppTile key={item.id} details={item}/>\r\n    );\r\n  };\r\n\r\n  //transition\r\n  const transRef = useSpringRef();\r\n  const trans = useTransition(apps, {\r\n    ref: transRef,\r\n    trail: 400 / apps.length,\r\n    from: { opacity: 0, scale: 0 },\r\n    enter: { opacity: 1, scale: 1 },\r\n    leave: { opacity: 0, scale: 0 },\r\n    config: {\r\n      friction: 10,\r\n      tension: 120\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    transRef.start();\r\n  }, [apps, transRef]);\r\n\r\n  return (\r\n    <Grid container justifyContent='center' columnSpacing={1} rowSpacing={1}>\r\n      \r\n        {trans((style, item) => (\r\n          <Grid item xs={4} md={2}>\r\n            <animated.div style={{...style}}>\r\n              {createAppTile(item)}\r\n            </animated.div>\r\n          </Grid>\r\n        ))}\r\n      \r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AppGrid;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,YAAY,EAAEC,aAAa,QAAQ,mBAAmB;AACzE,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,QAAQ,eAAe;AACpC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAI;EAEvB,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC9B,oBACEN,OAAA,CAACF,OAAO;MAAeS,OAAO,EAAED;IAAK,GAAvBA,IAAI,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC;EAE3C,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAGnB,YAAY,CAAC,CAAC;EAC/B,MAAMoB,KAAK,GAAGnB,aAAa,CAACS,IAAI,EAAE;IAChCW,GAAG,EAAEF,QAAQ;IACbG,KAAK,EAAE,GAAG,GAAGZ,IAAI,CAACa,MAAM;IACxBC,IAAI,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC;IAC9BC,KAAK,EAAE;MAAEF,OAAO,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC;IAC/BE,KAAK,EAAE;MAAEH,OAAO,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC;IAC/BG,MAAM,EAAE;MACNC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX;EACF,CAAC,CAAC;EAEF7B,SAAS,CAAC,MAAM;IACdiB,QAAQ,CAACa,KAAK,CAAC,CAAC;EAClB,CAAC,EAAE,CAACtB,IAAI,EAAES,QAAQ,CAAC,CAAC;EAEpB,oBACEb,OAAA,CAACH,IAAI;IAAC8B,SAAS;IAACC,cAAc,EAAC,QAAQ;IAACC,aAAa,EAAE,CAAE;IAACC,UAAU,EAAE,CAAE;IAAAC,QAAA,EAEnEjB,KAAK,CAAC,CAACkB,KAAK,EAAE1B,IAAI,kBACjBN,OAAA,CAACH,IAAI;MAACS,IAAI;MAAC2B,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAH,QAAA,eACtB/B,OAAA,CAACP,QAAQ,CAAC0C,GAAG;QAACH,KAAK,EAAE;UAAC,GAAGA;QAAK,CAAE;QAAAD,QAAA,EAC7B1B,aAAa,CAACC,IAAI;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEX;AAACT,EAAA,CAxCQF,OAAO;EAAA,QAUGP,YAAY,EACfC,aAAa;AAAA;AAAAyC,EAAA,GAXpBnC,OAAO;AAwCf;AAED,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}