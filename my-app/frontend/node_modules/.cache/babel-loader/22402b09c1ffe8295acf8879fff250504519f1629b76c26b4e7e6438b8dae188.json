{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\WebApp\\\\my-app\\\\src\\\\components\\\\ProjectContainer.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Divider from '@mui/material/Divider';\nimport { motion } from 'framer-motion';\nimport StackedNavbar from '../StackedNavbar';\nimport { useState } from 'react';\nimport projects from '../files/projects.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectContainer() {\n  _s();\n  const [state, setState] = React.useState({\n    down: false\n  });\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({\n      ...state,\n      [anchor]: open\n    });\n  };\n  //   const blue2 = getComputedStyle(document.body).getPropertyValue('--blue2');\n  //   const [section, setSection] = useState('project_1');\n\n  //   const changeSection = (section) => {\n  //     setSection(section);\n  //   };\n\n  //add currently selected section variable x\n  //add callback function from StackedNavbar.js to change the section x\n  //add currently selected section variable to the props of StackedNavbar.js  x\n  //add code to create new project container so that it can be dynamically created\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: items.map(text => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        disabled: props.currentSection === text ? true : false,\n        className: \"sidebar-item\",\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          onClick: sidebarAction(text),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: getIcon(text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    onClick: toggleDrawer(anchor, true),\n    children: ['down'].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: anchor,\n        open: state[anchor],\n        onClose: toggleDrawer(anchor, false),\n        children: list(anchor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, anchor, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectContainer, \"jzGgFZrfU5Gx7M3YTVxB66RBOBs=\");\n_c = ProjectContainer;\nexport default ProjectContainer;\nvar _c;\n$RefreshReg$(_c, \"ProjectContainer\");","map":{"version":3,"names":["Divider","motion","StackedNavbar","useState","projects","jsxDEV","_jsxDEV","ProjectContainer","_s","state","setState","React","down","toggleDrawer","anchor","open","event","type","key","list","Box","sx","width","role","onClick","onKeyDown","children","List","items","map","text","ListItem","disablePadding","disabled","props","currentSection","className","ListItemButton","sidebarAction","ListItemIcon","getIcon","fileName","_jsxFileName","lineNumber","columnNumber","ListItemText","primary","Fragment","Drawer","onClose","_c","$RefreshReg$"],"sources":["D:/React Projects/WebApp/my-app/src/components/ProjectContainer.js"],"sourcesContent":["import '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Divider from '@mui/material/Divider';\r\nimport { motion } from 'framer-motion';\r\nimport StackedNavbar from '../StackedNavbar';\r\nimport { useState } from 'react';\r\nimport projects from '../files/projects.json';\r\n\r\nfunction ProjectContainer() {\r\n  const [state, setState] = React.useState({\r\n    down: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n//   const blue2 = getComputedStyle(document.body).getPropertyValue('--blue2');\r\n//   const [section, setSection] = useState('project_1');\r\n\r\n//   const changeSection = (section) => {\r\n//     setSection(section);\r\n//   };\r\n\r\n  //add currently selected section variable x\r\n  //add callback function from StackedNavbar.js to change the section x\r\n  //add currently selected section variable to the props of StackedNavbar.js  x\r\n  //add code to create new project container so that it can be dynamically created\r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: '100%'}}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {items.map((text) => (\r\n          <ListItem key={text} disablePadding disabled={props.currentSection === text ? true : false} className='sidebar-item'>\r\n            <ListItemButton onClick={sidebarAction(text)}>\r\n              <ListItemIcon>\r\n                {getIcon(text)}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text}/>\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div className='project-container' onClick={toggleDrawer(anchor, true)}>\r\n      {['down'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          {/* <Button size='small' variant='outlined' onClick={toggleDrawer(anchor, true)} className='rotate sidebar-btn'>\r\n              <KeyboardArrowUp/>\r\n          </Button> */}\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}