{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\WebApp\\\\my-app\\\\src\\\\components\\\\TestSpring.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Spring } from \"react-spring\";\nimport { withGesture } from \"react-with-gesture\";\n// import useSpring\nimport { useSpring, animated, useSpringRef, useTransition } from '@react-spring/web';\nimport { useState, useEffect } from \"react\";\nimport { transform } from \"framer-motion\";\nimport { Button } from \"@mui/material\";\nimport { config } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestSpring() {\n  _s();\n  const [open, setOpen] = useState(false);\n  const handleClick = newValue => {\n    setOpen(newValue);\n  };\n  const transRef = useSpringRef();\n  const data = ['test1', 'test2', 'test3'];\n  // transition for carousel\n  // const props = useSpring({\n  //    from: {opacity: 1, y: 0},\n  //    to: [\n  //     { opacity: 0, y: -20},\n  //     { opacity: 0, y: 10},\n  //     { opacity: 1, y: -5},\n  //     { opacity: 1, y: 0}\n  //    ],\n  //    config: {duration: 150, friction: 14, tension: 120},\n  //    ref: transRef\n  // });\n\n  const trans = useTransition(open, {\n    from: {\n      opacity: 1,\n      y: 0\n    },\n    enter: [{\n      opacity: 1,\n      y: 10\n    }, {\n      opacity: 1,\n      y: 0\n    }],\n    leave: {\n      opacity: 0,\n      y: -10\n    },\n    ref: transRef,\n    exitBeforeEnter: true,\n    config: {\n      duration: 1000,\n      tension: 120,\n      friction: 14\n    }\n  });\n  useEffect(() => {\n    transRef.start();\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '400px',\n      width: '400px'\n    },\n    children: [trans((style, item) => /*#__PURE__*/_jsxDEV(animated.div, {\n      style: {\n        ...style,\n        height: '150px',\n        backgroundColor: 'white',\n        zIndex: '1',\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'black',\n          height: '100%',\n          textAlign: 'center'\n        },\n        children: data[item]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleClick(!open),\n      children: \" click me \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(TestSpring, \"hyrAsTeABnNw+vQp9/LD+KzjGCc=\", false, function () {\n  return [useSpringRef, useTransition];\n});\n_c = TestSpring;\nexport default TestSpring;\nvar _c;\n$RefreshReg$(_c, \"TestSpring\");","map":{"version":3,"names":["React","styled","Spring","withGesture","useSpring","animated","useSpringRef","useTransition","useState","useEffect","transform","Button","config","jsxDEV","_jsxDEV","TestSpring","_s","open","setOpen","handleClick","newValue","transRef","data","trans","from","opacity","y","enter","leave","ref","exitBeforeEnter","duration","tension","friction","start","style","height","width","children","item","div","backgroundColor","zIndex","position","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/React Projects/WebApp/my-app/src/components/TestSpring.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Spring } from \"react-spring\";\r\nimport { withGesture } from \"react-with-gesture\";\r\n// import useSpring\r\nimport { useSpring, animated, useSpringRef, useTransition } from '@react-spring/web';\r\nimport { useState, useEffect } from \"react\";\r\nimport { transform } from \"framer-motion\";\r\nimport { Button } from \"@mui/material\";\r\nimport { config } from 'react-spring';\r\n\r\nfunction TestSpring() {\r\n    const [open, setOpen] = useState(false);\r\n    const handleClick = (newValue) => {\r\n        setOpen(newValue);\r\n    };\r\n\r\n    const transRef = useSpringRef();\r\n\r\n    \r\n\r\n    const data = ['test1', 'test2', 'test3'];\r\n    // transition for carousel\r\n    // const props = useSpring({\r\n    //    from: {opacity: 1, y: 0},\r\n    //    to: [\r\n    //     { opacity: 0, y: -20},\r\n    //     { opacity: 0, y: 10},\r\n    //     { opacity: 1, y: -5},\r\n    //     { opacity: 1, y: 0}\r\n    //    ],\r\n    //    config: {duration: 150, friction: 14, tension: 120},\r\n    //    ref: transRef\r\n    // });\r\n\r\n    const trans = useTransition(open, {\r\n        from: {\r\n            opacity: 1, y: 0\r\n        },\r\n        enter: [\r\n            {opacity: 1, y: 10},\r\n            {opacity: 1, y: 0}\r\n        ],\r\n        leave: {\r\n            opacity: 0, y: -10\r\n        },\r\n        ref: transRef,\r\n        exitBeforeEnter: true,\r\n        config: {\r\n            duration: 1000,\r\n            tension: 120,\r\n            friction: 14\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        transRef.start();\r\n    }, [open]);\r\n    \r\n    return (\r\n        <div style={{height: '400px', width: '400px'}}>\r\n            {trans((style, item) => (\r\n                <animated.div style={{...style, height:'150px', backgroundColor: 'white', zIndex: '1', position: 'relative'}}>\r\n                    <p style={{color: 'black', height: '100%', textAlign: 'center'}}>{data[item]}</p>\r\n                </animated.div>\r\n            ))}\r\n            {/* <animated.div style={{...trans, height:'150px', backgroundColor: 'white', zIndex: '1', position: 'relative'}}>\r\n                <p style={{color: 'black', height: '100%', textAlign: 'center'}}>test1</p>\r\n            </animated.div>\r\n            <animated.div style={{...trans, height:'150px', backgroundColor: 'white', zIndex: '2', position: 'relative'}}>\r\n                <p style={{color: 'black', height: '100%', textAlign: 'center'}}>test2</p>\r\n            </animated.div>\r\n            <animated.div style={{...trans, height:'150px', backgroundColor: 'white', zIndex: '1', position: 'relative'}}>\r\n                <p style={{color: 'black', height: '100%', textAlign: 'center'}}>test3</p>\r\n            </animated.div> */}\r\n            <Button onClick={() => handleClick(!open)}> click me </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TestSpring;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}