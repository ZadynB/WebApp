{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\WebApp\\\\my-app\\\\src\\\\pages\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Divider from '@mui/material/Divider';\nimport { motion } from 'framer-motion';\nimport StackedNavbar from '../StackedNavbar';\nimport { useState } from 'react';\nimport projects from '../files/projects.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  const blue2 = getComputedStyle(document.body).getPropertyValue('--blue2');\n  const [section, setSection] = useState('project_1');\n  const changeSection = section => {\n    setSection(section);\n  };\n\n  //add currently selected section variable\n  //add callback function from StackedNavbar.js to change the section\n  //add currently selected section variable to the props of StackedNavbar.js\n\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"body-main\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      duration: 0.5,\n      ease: 'easeOut'\n    },\n    exit: {\n      opacity: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\",\n      sx: {\n        borderColor: blue2,\n        width: '100%',\n        borderWidth: '1px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textWrap: 'wrap'\n        },\n        children: \"Explore the Projects!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\",\n      sx: {\n        borderColor: blue2,\n        width: '100%',\n        borderWidth: '1px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StackedNavbar, {\n      capacity: \"3\",\n      items: projects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"nh4POckGfhUWyZ1AgSgCG8LcIAo=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["Divider","motion","StackedNavbar","useState","projects","jsxDEV","_jsxDEV","Projects","_s","blue2","getComputedStyle","document","body","getPropertyValue","section","setSection","changeSection","div","className","initial","opacity","animate","transition","duration","ease","exit","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","borderColor","width","borderWidth","style","textWrap","capacity","items","_c","$RefreshReg$"],"sources":["D:/React Projects/WebApp/my-app/src/pages/Projects.js"],"sourcesContent":["import '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Divider from '@mui/material/Divider';\r\nimport { motion } from 'framer-motion';\r\nimport StackedNavbar from '../StackedNavbar';\r\nimport { useState } from 'react';\r\nimport projects from '../files/projects.json';\r\n\r\nfunction Projects() {\r\n  const blue2 = getComputedStyle(document.body).getPropertyValue('--blue2');\r\n  const [section, setSection] = useState('project_1');\r\n\r\n  const changeSection = (section) => {\r\n    setSection(section);\r\n  };\r\n\r\n  //add currently selected section variable\r\n  //add callback function from StackedNavbar.js to change the section\r\n  //add currently selected section variable to the props of StackedNavbar.js\r\n\r\n  return (\r\n    <motion.div \r\n      className='body-main'\r\n      initial= {{opacity: 0}}\r\n      animate = {{opacity: 1}}\r\n      transition={{duration: 0.5, ease: 'easeOut'}}\r\n      exit={{opacity: 0}}\r\n    >\r\n      <br></br>\r\n      <h1>Projects</h1>\r\n      <Divider\r\n        variant='middle'\r\n        sx={{\r\n          borderColor: blue2,\r\n          width: '100%',\r\n          borderWidth: '1px'\r\n        }}\r\n      >\r\n      </Divider>\r\n      <br></br>\r\n      <div>\r\n        <h3 style={{textWrap: 'wrap'}}>\r\n        Explore the Projects!\r\n        </h3>\r\n      </div>\r\n      <br></br>\r\n      <Divider\r\n        variant='middle'\r\n        sx={{\r\n          borderColor: blue2,\r\n          width: '100%',\r\n          borderWidth: '1px'\r\n        }}\r\n      >\r\n      </Divider>\r\n      {/* <div>\r\n        <p style={{textWrap: 'wrap'}}>\r\n          This page holds information about the developers of this React Web Application.\r\n          Additionally, you can also find information on the different kinds of projects that were done.\r\n        </p>\r\n        <p style={{textWrap: 'wrap'}}>\r\n          In order to navigate to the various pages, you an either use the below navigation links or use the button at the side of the page\r\n          to display the options.\r\n        </p>\r\n      </div> */}\r\n      <StackedNavbar capacity='3' items={projects} />\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default Projects;"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAO,sCAAsC;AAC7C,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,KAAK,GAAGC,gBAAgB,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,gBAAgB,CAAC,SAAS,CAAC;EACzE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,WAAW,CAAC;EAEnD,MAAMa,aAAa,GAAIF,OAAO,IAAK;IACjCC,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC;;EAED;EACA;EACA;;EAEA,oBACER,OAAA,CAACL,MAAM,CAACgB,GAAG;IACTC,SAAS,EAAC,WAAW;IACrBC,OAAO,EAAG;MAACC,OAAO,EAAE;IAAC,CAAE;IACvBC,OAAO,EAAI;MAACD,OAAO,EAAE;IAAC,CAAE;IACxBE,UAAU,EAAE;MAACC,QAAQ,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAS,CAAE;IAC7CC,IAAI,EAAE;MAACL,OAAO,EAAE;IAAC,CAAE;IAAAM,QAAA,gBAEnBpB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTxB,OAAA;MAAAoB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBxB,OAAA,CAACN,OAAO;MACN+B,OAAO,EAAC,QAAQ;MAChBC,EAAE,EAAE;QACFC,WAAW,EAAExB,KAAK;QAClByB,KAAK,EAAE,MAAM;QACbC,WAAW,EAAE;MACf;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC,eACVxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTxB,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAI8B,KAAK,EAAE;UAACC,QAAQ,EAAE;QAAM,CAAE;QAAAX,QAAA,EAAC;MAE/B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTxB,OAAA,CAACN,OAAO;MACN+B,OAAO,EAAC,QAAQ;MAChBC,EAAE,EAAE;QACFC,WAAW,EAAExB,KAAK;QAClByB,KAAK,EAAE,MAAM;QACbC,WAAW,EAAE;MACf;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC,eAWVxB,OAAA,CAACJ,aAAa;MAACoC,QAAQ,EAAC,GAAG;MAACC,KAAK,EAAEnC;IAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEjB;AAACtB,EAAA,CA5DQD,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA8DjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}