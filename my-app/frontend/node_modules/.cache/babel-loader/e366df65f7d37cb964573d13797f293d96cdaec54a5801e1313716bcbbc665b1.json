{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\WebApp\\\\my-app\\\\src\\\\components\\\\AppGrid.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSpring, animated, useSpringRef, useTransition } from '@react-spring/web';\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { KeyboardArrowUp, KeyboardArrowDown } from \"@mui/icons-material\";\nimport { Grid } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport { styled } from '@mui/material/styles';\nimport AppTile from './AppTile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppGrid(props) {\n  _s();\n  const apps = props.apps;\n  const createAppTile = item => {\n    return /*#__PURE__*/_jsxDEV(AppTile, {\n      details: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  };\n  const transRef = useSpringRef();\n  const trans = useTransition(apps, {\n    ref: transRef,\n    trail: 400 / apps.length,\n    from: {\n      opacity: 0,\n      scale: 0\n    },\n    enter: {\n      opacity: 1,\n      scale: 1\n    },\n    leave: {\n      opacity: 0,\n      scale: 0\n    }\n  });\n\n  //fix transition\n  //add styling like the spring/transition for all of the grid items\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    columnSpacing: 1,\n    rowSpacing: 1,\n    children: trans((style, item) => /*#__PURE__*/_jsxDEV(animated.div, {\n      style: {\n        ...style,\n        position: 'relative',\n        height: '100%'\n      },\n      children: createAppTile(item)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AppGrid, \"2/p2t3Esk/3jU8OhgymPGa3MnK0=\", false, function () {\n  return [useSpringRef, useTransition];\n});\n_c = AppGrid;\n;\nexport default AppGrid;\nvar _c;\n$RefreshReg$(_c, \"AppGrid\");","map":{"version":3,"names":["React","useSpring","animated","useSpringRef","useTransition","useState","useEffect","Button","KeyboardArrowUp","KeyboardArrowDown","Grid","Paper","styled","AppTile","jsxDEV","_jsxDEV","AppGrid","props","_s","apps","createAppTile","item","details","id","fileName","_jsxFileName","lineNumber","columnNumber","transRef","trans","ref","trail","length","from","opacity","scale","enter","leave","container","justifyContent","columnSpacing","rowSpacing","children","style","div","position","height","_c","$RefreshReg$"],"sources":["D:/React Projects/WebApp/my-app/src/components/AppGrid.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSpring, animated, useSpringRef, useTransition } from '@react-spring/web';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { KeyboardArrowUp, KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Grid } from '@mui/material';\r\nimport Paper from '@mui/material/Paper';\r\nimport { styled } from '@mui/material/styles';\r\nimport AppTile from './AppTile';\r\n\r\nfunction AppGrid(props) {\r\n  const apps = props.apps;\r\n\r\n  const createAppTile = (item) => {\r\n    return (\r\n      <AppTile key={item.id} details={item}/>\r\n    );\r\n  };\r\n\r\n  const transRef = useSpringRef();\r\n  const trans = useTransition(apps, {\r\n    ref: transRef,\r\n    trail: 400 / apps.length,\r\n    from: { opacity: 0, scale: 0 },\r\n    enter: { opacity: 1, scale: 1 },\r\n    leave: { opacity: 0, scale: 0 },\r\n  });\r\n\r\n    //fix transition\r\n  //add styling like the spring/transition for all of the grid items\r\n  return (\r\n    <Grid container justifyContent='center' columnSpacing={1} rowSpacing={1}>\r\n        {trans((style, item) => (\r\n          <animated.div style={{...style, position: 'relative', height: '100%'}}>\r\n            {/* {Object.entries(apps).map(([key, value]) => {createAppTile(key, value)})} */}\r\n            {/* <p>this</p> */}\r\n            {createAppTile(item)}\r\n          </animated.div>\r\n        ))}\r\n      {/* {Object.entries(apps).map(([key, value]) => createAppTile(key, value))} */}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AppGrid;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,aAAa,QAAQ,mBAAmB;AACpF,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,qBAAqB;AACxE,SAASC,IAAI,QAAQ,eAAe;AACpC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAI;EAEvB,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC9B,oBACEN,OAAA,CAACF,OAAO;MAAeS,OAAO,EAAED;IAAK,GAAvBA,IAAI,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC;EAE3C,CAAC;EAED,MAAMC,QAAQ,GAAGzB,YAAY,CAAC,CAAC;EAC/B,MAAM0B,KAAK,GAAGzB,aAAa,CAACe,IAAI,EAAE;IAChCW,GAAG,EAAEF,QAAQ;IACbG,KAAK,EAAE,GAAG,GAAGZ,IAAI,CAACa,MAAM;IACxBC,IAAI,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC;IAC9BC,KAAK,EAAE;MAAEF,OAAO,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC;IAC/BE,KAAK,EAAE;MAAEH,OAAO,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE;EAChC,CAAC,CAAC;;EAEA;EACF;EACA,oBACEpB,OAAA,CAACL,IAAI;IAAC4B,SAAS;IAACC,cAAc,EAAC,QAAQ;IAACC,aAAa,EAAE,CAAE;IAACC,UAAU,EAAE,CAAE;IAAAC,QAAA,EACnEb,KAAK,CAAC,CAACc,KAAK,EAAEtB,IAAI,kBACjBN,OAAA,CAACb,QAAQ,CAAC0C,GAAG;MAACD,KAAK,EAAE;QAAC,GAAGA,KAAK;QAAEE,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAM,CAAE;MAAAJ,QAAA,EAGnEtB,aAAa,CAACC,IAAI;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEX;AAACT,EAAA,CAhCQF,OAAO;EAAA,QASGb,YAAY,EACfC,aAAa;AAAA;AAAA2C,EAAA,GAVpB/B,OAAO;AAgCf;AAED,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}