{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\WebApp\\\\my-app\\\\src\\\\components\\\\testSlide.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Spring } from \"react-spring\";\nimport { withGesture } from \"react-with-gesture\";\n// import useSpring\nimport { useSpring, animated } from '@react-spring/web';\nimport { transform } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlideContainer = styled.div`\n  position: absolute;\n  height: 70%;\n  top: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n`;\nconst SlideCard = styled.div`\n  position: relative;\n  max-width: 50%;\n  min-width: 30%;\n  width: 100vw;\n  height: 100%;\n  background: white;\n  font-size: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n  color: black;\n`;\n\n// {\n//     content,\n//     offsetRadius,\n//     index,\n//     animationConfig,\n//     moveSlide,\n//     delta,\n//     down,\n//     up\n//   }\n\nfunction TestSlide(props) {\n  _s();\n  console.log(props);\n  // console.log(\"NAME:\" + content);\n  // console.log('Offset:' +offsetRadius);\n  // console.log('INDEX:' + index);\n  const offsetFromMiddle = props.index - props.offsetRadius;\n  // console.log('OffMid:' + offsetFromMiddle);\n  const totalPresentables = 2 * props.offsetRadius + 1;\n  // console.log('Pres:' + totalPresentables);\n  const distanceFactor = 1 - Math.abs(offsetFromMiddle / (props.offsetRadius + 1));\n  // console.log('DIST:' + distanceFactor);\n  // console.log('Down:' + down);\n  // console.log('UP:' + up);\n  // console.log(\"DELT:\" + delta);\n  const offsetCardClick = i => {\n    console.log(i);\n  };\n  const translateYoffset = 50 * (Math.abs(offsetFromMiddle) / (props.offsetRadius + 1));\n  let translateY = -50;\n  if (props.offsetRadius !== 0) {\n    if (props.index === 0) {\n      translateY = 0;\n    } else if (props.index === totalPresentables - 1) {\n      translateY = -100;\n    }\n  }\n  // console.log('Trans:' + translateY);\n\n  if (offsetFromMiddle === 0) {\n    // translateY += delta[1] / (props.offsetRadius + 1);\n    // console.log(\"NEW TRANS:\" + translateY);\n    if (translateY > -40) {\n      // console.log('here');\n      props.moveSlide(-1);\n    }\n    if (translateY < -100) {\n      // console.log('here2');\n      console.log('here');\n      props.moveSlide(1);\n    }\n  }\n  if (offsetFromMiddle > 0) {\n    translateY += translateYoffset;\n  } else if (offsetFromMiddle < 0) {\n    translateY -= translateYoffset;\n  }\n  console.log('CONTENT:' + props.content);\n  console.log('TRANS:' + translateY);\n  console.log(\"INDEX:\" + props.index);\n  // console.log(\"NEW TRANS2:\" + translateY);\n\n  let str = '';\n  console.log(props.direction);\n  if (props.direction === 'up') {\n    if (props.index === 2) {\n      str = `translateX(0%) translateY(-300%) scale(${0})`;\n    } else if (props.index === 1) {\n      str = `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`;\n    } else {\n      str = `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`;\n    }\n  } else {\n    if (props.index === 2) {\n      str = `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`;\n    } else {\n      str = `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`;\n    }\n  }\n  const spring = useSpring({\n    // from: {opacity: 0},\n    from: {\n      transform: str\n    },\n    to: {\n      opacity: distanceFactor * distanceFactor,\n      // transform: `scale(${distanceFactor})`,\n      top: `${props.offsetRadius === 0 ? 50 : 50 + offsetFromMiddle * 50 / props.offsetRadius}%`,\n      transform: `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`\n    },\n    config: {\n      duration: 3000\n    }\n    // transform: `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`,\n    // top: `${\n    //   offsetRadius === 0 ? 50 : 50 + (offsetFromMiddle * 50) / offsetRadius\n    // }%`,\n    // opacity: distanceFactor * distanceFactor\n    // opacity: Math.abs(Math.abs(offsetFromMiddle) - 2) === 2 ? 1 : 0.5,\n    // top: `${\n    //   offsetRadius === 0 ? 50 : 50 + (offsetFromMiddle * 50) / offsetRadius\n    // }%`,\n    // opacity: distanceFactor * distanceFactor,\n    // transform: `translateX(0%) translateY(${translateY}%)`,\n    // transform: `translate3d(0,${translateY}px,0)`,\n    // config: animationConfig\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    style: {\n      ...spring\n    },\n    className: \"test\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(TestSlide, \"xrfx8rkkJgEmgq4ddSaV8nbWakk=\", false, function () {\n  return [useSpring];\n});\n_c = TestSlide;\nexport default TestSlide;\nvar _c;\n$RefreshReg$(_c, \"TestSlide\");","map":{"version":3,"names":["React","styled","Spring","withGesture","useSpring","animated","transform","jsxDEV","_jsxDEV","SlideContainer","div","SlideCard","TestSlide","props","_s","console","log","offsetFromMiddle","index","offsetRadius","totalPresentables","distanceFactor","Math","abs","offsetCardClick","i","translateYoffset","translateY","moveSlide","content","str","direction","spring","from","to","opacity","top","config","duration","style","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React Projects/WebApp/my-app/src/components/testSlide.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Spring } from \"react-spring\";\r\nimport { withGesture } from \"react-with-gesture\";\r\n// import useSpring\r\nimport { useSpring, animated } from '@react-spring/web';\r\nimport { transform } from \"framer-motion\";\r\n\r\nconst SlideContainer = styled.div`\r\n  position: absolute;\r\n  height: 70%;\r\n  top: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transform-origin: 50% 50%;\r\n`;\r\n\r\nconst SlideCard = styled.div`\r\n  position: relative;\r\n  max-width: 50%;\r\n  min-width: 30%;\r\n  width: 100vw;\r\n  height: 100%;\r\n  background: white;\r\n  font-size: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transform-origin: 50% 50%;\r\n  color: black;\r\n`;\r\n\r\n// {\r\n//     content,\r\n//     offsetRadius,\r\n//     index,\r\n//     animationConfig,\r\n//     moveSlide,\r\n//     delta,\r\n//     down,\r\n//     up\r\n//   }\r\n\r\nfunction TestSlide(props) {\r\n  console.log(props);\r\n  // console.log(\"NAME:\" + content);\r\n  // console.log('Offset:' +offsetRadius);\r\n  // console.log('INDEX:' + index);\r\n  const offsetFromMiddle = props.index - props.offsetRadius;\r\n  // console.log('OffMid:' + offsetFromMiddle);\r\n  const totalPresentables = 2 * props.offsetRadius + 1;\r\n  // console.log('Pres:' + totalPresentables);\r\n  const distanceFactor = 1 - Math.abs(offsetFromMiddle / (props.offsetRadius + 1));\r\n  // console.log('DIST:' + distanceFactor);\r\n  // console.log('Down:' + down);\r\n  // console.log('UP:' + up);\r\n  // console.log(\"DELT:\" + delta);\r\n  const offsetCardClick = i => {\r\n    console.log(i);\r\n  };\r\n\r\n  const translateYoffset = 50 * (Math.abs(offsetFromMiddle) / (props.offsetRadius + 1));\r\n  let translateY = -50;\r\n\r\n  if (props.offsetRadius !== 0) {\r\n    if (props.index === 0) {\r\n      translateY = 0;\r\n    } else if (props.index === totalPresentables - 1) {\r\n      translateY = -100;\r\n    }\r\n  }\r\n  // console.log('Trans:' + translateY);\r\n\r\n  if (offsetFromMiddle === 0) {\r\n    // translateY += delta[1] / (props.offsetRadius + 1);\r\n    // console.log(\"NEW TRANS:\" + translateY);\r\n    if (translateY > -40) {\r\n      // console.log('here');\r\n      props.moveSlide(-1);\r\n    }\r\n    if (translateY < -100) {\r\n      // console.log('here2');\r\n      console.log('here');\r\n      props.moveSlide(1);\r\n    }\r\n  }\r\n\r\n  if (offsetFromMiddle > 0) {\r\n    translateY += translateYoffset;\r\n  } else if (offsetFromMiddle < 0) {\r\n    translateY -= translateYoffset;\r\n  }\r\n  console.log('CONTENT:' + props.content);\r\n  console.log('TRANS:' + translateY);\r\n  console.log(\"INDEX:\" + props.index);\r\n  // console.log(\"NEW TRANS2:\" + translateY);\r\n\r\n  let str = '';\r\n  console.log(props.direction);\r\n  if (props.direction === 'up') {\r\n    if (props.index === 2) {\r\n      str = `translateX(0%) translateY(-300%) scale(${0})`;\r\n    } else if (props.index === 1){\r\n      str = `translateX(0%) translateY(${translateY }%) scale(${distanceFactor})`;\r\n    } else {\r\n      str = `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`;\r\n    }\r\n  } else {\r\n    if (props.index === 2) {\r\n      str = `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`;\r\n    } else {\r\n      str = `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`;\r\n    }\r\n  }\r\n  \r\n\r\n  const spring = useSpring({\r\n    // from: {opacity: 0},\r\n    from: {\r\n      transform: str,  \r\n    },\r\n    to: {\r\n      opacity: distanceFactor * distanceFactor,\r\n      // transform: `scale(${distanceFactor})`,\r\n      top: `${\r\n        props.offsetRadius === 0 ? 50 : 50 + (offsetFromMiddle * 50) / props.offsetRadius\r\n      }%`,\r\n      transform: `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`,\r\n    },\r\n    config: {duration: 3000}\r\n    // transform: `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`,\r\n    // top: `${\r\n    //   offsetRadius === 0 ? 50 : 50 + (offsetFromMiddle * 50) / offsetRadius\r\n    // }%`,\r\n    // opacity: distanceFactor * distanceFactor\r\n    // opacity: Math.abs(Math.abs(offsetFromMiddle) - 2) === 2 ? 1 : 0.5,\r\n    // top: `${\r\n    //   offsetRadius === 0 ? 50 : 50 + (offsetFromMiddle * 50) / offsetRadius\r\n    // }%`,\r\n    // opacity: distanceFactor * distanceFactor,\r\n    // transform: `translateX(0%) translateY(${translateY}%)`,\r\n    // transform: `translate3d(0,${translateY}px,0)`,\r\n    // config: animationConfig\r\n  });\r\n  return (\r\n    <animated.div style={{...spring}} className='test'>\r\n      <p>{props.content}</p>\r\n      {/* <SlideContainer\r\n        style={{zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)}}\r\n      >\r\n        <SlideCard onClick={() => moveSlide(offsetFromMiddle)}>\r\n          {content}\r\n        </SlideCard>\r\n      </SlideContainer> */}\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nexport default TestSlide;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}