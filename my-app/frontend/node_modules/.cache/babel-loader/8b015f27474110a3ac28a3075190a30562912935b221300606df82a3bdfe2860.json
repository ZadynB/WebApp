{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\WebApp\\\\my-app\\\\src\\\\components\\\\ProjectContainer.js\";\nimport * as React from 'react';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Divider from '@mui/material/Divider';\nimport { motion } from 'framer-motion';\nimport StackedNavbar from '../StackedNavbar';\nimport { useState } from 'react';\nimport projects from '../files/projects.json';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectContainer(props) {\n  // const [state, setState] = useState({\n  //   bottom: false,\n  // });\n\n  // const toggleDrawer = (anchor, open) => (event) => {\n  //   if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n  //     return;\n  //   }\n\n  //   setState({ ...state, [anchor]: open });\n  // };\n  //   const blue2 = getComputedStyle(document.body).getPropertyValue('--blue2');\n  //   const [section, setSection] = useState('project_1');\n\n  //   const changeSection = (section) => {\n  //     setSection(section);\n  //   };\n\n  //add currently selected section variable x\n  //add callback function from StackedNavbar.js to change the section x\n  //add currently selected section variable to the props of StackedNavbar.js  x\n  //add code to create new project container so that it can be dynamically created\n\n  // const list = (anchor) => (\n  //   <Box\n  //     sx={{ width: '100%'}}\n  //     role=\"presentation\"\n  //     onClick={toggleDrawer(anchor, false)}\n  //     onKeyDown={toggleDrawer(anchor, false)}\n  //   >\n  //     {/* <List>\n  //       {items.map((text) => (\n  //         <ListItem key={text} disablePadding disabled={props.currentSection === text ? true : false} className='sidebar-item'>\n  //           <ListItemButton onClick={sidebarAction(text)}>\n  //             <ListItemIcon>\n  //               {getIcon(text)}\n  //             </ListItemIcon>\n  //             <ListItemText primary={text}/>\n  //           </ListItemButton>\n  //         </ListItem>\n  //       ))}\n  //     </List> */}\n  //   </Box>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        variant: \"text\",\n        className: \"project-container-btn\",\n        children: \"show more details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, props.project_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = ProjectContainer;\nexport default ProjectContainer;\nvar _c;\n$RefreshReg$(_c, \"ProjectContainer\");","map":{"version":3,"names":["React","Divider","motion","StackedNavbar","useState","projects","Box","Drawer","Button","List","ListItem","ListItemButton","ListItemIcon","ListItemText","jsxDEV","_jsxDEV","ProjectContainer","props","className","children","Fragment","size","variant","fileName","_jsxFileName","lineNumber","columnNumber","project_name","_c","$RefreshReg$"],"sources":["D:/React Projects/WebApp/my-app/src/components/ProjectContainer.js"],"sourcesContent":["import * as React from 'react';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Divider from '@mui/material/Divider';\r\nimport { motion } from 'framer-motion';\r\nimport StackedNavbar from '../StackedNavbar';\r\nimport { useState } from 'react';\r\nimport projects from '../files/projects.json';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nfunction ProjectContainer(props) {\r\n  // const [state, setState] = useState({\r\n  //   bottom: false,\r\n  // });\r\n\r\n  // const toggleDrawer = (anchor, open) => (event) => {\r\n  //   if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   setState({ ...state, [anchor]: open });\r\n  // };\r\n//   const blue2 = getComputedStyle(document.body).getPropertyValue('--blue2');\r\n//   const [section, setSection] = useState('project_1');\r\n\r\n//   const changeSection = (section) => {\r\n//     setSection(section);\r\n//   };\r\n\r\n  //add currently selected section variable x\r\n  //add callback function from StackedNavbar.js to change the section x\r\n  //add currently selected section variable to the props of StackedNavbar.js  x\r\n  //add code to create new project container so that it can be dynamically created\r\n\r\n  // const list = (anchor) => (\r\n  //   <Box\r\n  //     sx={{ width: '100%'}}\r\n  //     role=\"presentation\"\r\n  //     onClick={toggleDrawer(anchor, false)}\r\n  //     onKeyDown={toggleDrawer(anchor, false)}\r\n  //   >\r\n  //     {/* <List>\r\n  //       {items.map((text) => (\r\n  //         <ListItem key={text} disablePadding disabled={props.currentSection === text ? true : false} className='sidebar-item'>\r\n  //           <ListItemButton onClick={sidebarAction(text)}>\r\n  //             <ListItemIcon>\r\n  //               {getIcon(text)}\r\n  //             </ListItemIcon>\r\n  //             <ListItemText primary={text}/>\r\n  //           </ListItemButton>\r\n  //         </ListItem>\r\n  //       ))}\r\n  //     </List> */}\r\n  //   </Box>\r\n  // );\r\n\r\n  return (\r\n    <div className='project-container'>\r\n      {/* {['bottom'].map((anchor) => (\r\n        \r\n      ))} */}\r\n      <React.Fragment key={props.project_name}>\r\n          <Button size='large' variant='text' className='project-container-btn'>\r\n            show more details\r\n          </Button>\r\n          {/* <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n          </Drawer> */}\r\n        </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectContainer;"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,YAAY;AACnB,OAAO,sCAAsC;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC/B;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACF;EACA;;EAEA;EACA;EACA;;EAEE;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEF,OAAA;IAAKG,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAIhCJ,OAAA,CAACf,KAAK,CAACoB,QAAQ;MAAAD,QAAA,eACXJ,OAAA,CAACP,MAAM;QAACa,IAAI,EAAC,OAAO;QAACC,OAAO,EAAC,MAAM;QAACJ,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAEtE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC,GAHQT,KAAK,CAACU,YAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAACE,EAAA,GAjEQZ,gBAAgB;AAmEzB,eAAeA,gBAAgB;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}