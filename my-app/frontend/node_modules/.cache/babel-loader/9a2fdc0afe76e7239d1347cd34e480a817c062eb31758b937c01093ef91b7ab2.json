{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\WebApp\\\\my-app\\\\src\\\\components\\\\testCarousel.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Slide from \"./testSlide\";\n// import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;\n_c = Wrapper;\nconst NavigationButtons = styled.div`\n  position: relative;\n  display: flex;\n\n  height: 60px;\n  margin: 0 auto;\n  width: 20%;\n  margin-top: 1rem;\n  justify-content: space-between;\n  z-index: 1000;\n`;\n_c2 = NavigationButtons;\nconst NavBtn = styled.div`\n  background: white;\n  padding: 15px;\n  margin-bottom: 10px;\n  border-radius: 3px;\n`;\n_c3 = NavBtn;\nfunction mod(a, b) {\n  return (a % b + b) % b;\n}\nfunction TestVerticalCarousel(props) {\n  _s();\n  const [stateTest, setState] = useState({\n    index: 0,\n    goToSlide: null,\n    prevPropsGoToSlide: 0,\n    newSlide: false\n  });\n  //   console.log(props);\n  console.log(stateTest);\n  console.log(state);\n  //   state = {\n  //     index: 0,\n  //     goToSlide: null,\n  //     prevPropsGoToSlide: 0,\n  //     newSlide: false\n  //   };\n\n  const componentDidMount = () => {\n    document.addEventListener(\"keydown\", event => {\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n      if (event.keyCode === 38) {\n        moveSlide(-1);\n      }\n      if (event.keyCode === 40) {\n        moveSlide(1);\n      }\n    });\n  };\n\n  //   static propTypes = {\n  //     slides: PropTypes.arrayOf(\n  //       PropTypes.shape({\n  //         key: PropTypes.any,\n  //         content: PropTypes.object\n  //       })\n  //     ).isRequired,\n  //     goToSlide: PropTypes.number,\n  //     showNavigation: PropTypes.bool,\n  //     offsetRadius: PropTypes.number,\n  //     animationConfig: PropTypes.object\n  //   };\n\n  //   static defaultProps = {\n  //     offsetRadius: 2,\n  //     animationConfig: { tension: 120, friction: 14 }\n  //   };\n\n  const modBySlidesLength = index => {\n    return mod(index, props.slides.length);\n  };\n  const moveSlide = direction => {\n    setState({\n      index: modBySlidesLength(stateTest.index + direction),\n      goToSlide: null,\n      prevPropsGoToSlide: stateTest.prevPropsGoToSlide,\n      newSlide: stateTest.newSlide\n    });\n  };\n  const clampOffsetRadius = offsetRadius => {\n    // const slides = props.slides;\n    const upperBound = Math.floor((props.slides.length - 1) / 2);\n    if (offsetRadius < 0) {\n      return 0;\n    }\n    if (offsetRadius > upperBound) {\n      return upperBound;\n    }\n    return offsetRadius;\n  };\n  const getPresentableSlides = () => {\n    const {\n      slides\n    } = props.slides;\n    const {\n      index\n    } = stateTest.index;\n    let {\n      offsetRadius\n    } = props.offsetRadius;\n    offsetRadius = clampOffsetRadius(offsetRadius);\n    const presentableSlides = new Array();\n    for (let i = -offsetRadius; i < 1 + offsetRadius; i++) {\n      presentableSlides.push(slides[modBySlidesLength(index + i)]);\n    }\n    return presentableSlides;\n  };\n\n  //   render() {\n  //     const { animationConfig, offsetRadius, showNavigation } = this.props;\n\n  //     let navigationButtons = null;\n  //     if (showNavigation) {\n  //       navigationButtons = (\n  //         <NavigationButtons>\n  //           <NavBtn onClick={() => this.moveSlide(1)}>&#8593;</NavBtn>\n  //           <NavBtn onClick={() => this.moveSlide(-1)}>&#8595;</NavBtn>\n  //         </NavigationButtons>\n  //       );\n  //     }\n  let navigationButtons = null;\n  if (props.showNavigation) {\n    navigationButtons = /*#__PURE__*/_jsxDEV(NavigationButtons, {\n      children: [/*#__PURE__*/_jsxDEV(NavBtn, {\n        onClick: () => moveSlide(1),\n        children: \"\\u2191\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavBtn, {\n        onClick: () => moveSlide(-1),\n        children: \"\\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Wrapper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), navigationButtons]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 7\n  }, this);\n  //   }\n}\n_s(TestVerticalCarousel, \"FykvvDSThTZoPDlSmilUnRu0vqQ=\");\n_c4 = TestVerticalCarousel;\nexport default TestVerticalCarousel;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"NavigationButtons\");\n$RefreshReg$(_c3, \"NavBtn\");\n$RefreshReg$(_c4, \"TestVerticalCarousel\");","map":{"version":3,"names":["React","styled","Slide","useState","jsxDEV","_jsxDEV","Wrapper","div","_c","NavigationButtons","_c2","NavBtn","_c3","mod","a","b","TestVerticalCarousel","props","_s","stateTest","setState","index","goToSlide","prevPropsGoToSlide","newSlide","console","log","state","componentDidMount","document","addEventListener","event","isComposing","keyCode","moveSlide","modBySlidesLength","slides","length","direction","clampOffsetRadius","offsetRadius","upperBound","Math","floor","getPresentableSlides","presentableSlides","Array","i","push","navigationButtons","showNavigation","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","_c4","$RefreshReg$"],"sources":["D:/React Projects/WebApp/my-app/src/components/testCarousel.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Slide from \"./testSlide\";\r\n// import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst NavigationButtons = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n\r\n  height: 60px;\r\n  margin: 0 auto;\r\n  width: 20%;\r\n  margin-top: 1rem;\r\n  justify-content: space-between;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst NavBtn = styled.div`\r\n  background: white;\r\n  padding: 15px;\r\n  margin-bottom: 10px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nfunction mod(a, b) {\r\n  return ((a % b) + b) % b;\r\n}\r\n\r\nfunction TestVerticalCarousel(props) {\r\n  const [stateTest, setState] = useState({\r\n    index: 0,\r\n    goToSlide: null,\r\n    prevPropsGoToSlide: 0,\r\n    newSlide: false\r\n  });\r\n//   console.log(props);\r\n  console.log(stateTest);\r\n  console.log(state);\r\n//   state = {\r\n//     index: 0,\r\n//     goToSlide: null,\r\n//     prevPropsGoToSlide: 0,\r\n//     newSlide: false\r\n//   };\r\n\r\n  const componentDidMount = () => {\r\n    document.addEventListener(\"keydown\", event => {\r\n      if (event.isComposing || event.keyCode === 229) {\r\n        return;\r\n      }\r\n      if (event.keyCode === 38) {\r\n        moveSlide(-1);\r\n      }\r\n      if (event.keyCode === 40) {\r\n        moveSlide(1);\r\n      }\r\n    });\r\n  };\r\n\r\n//   static propTypes = {\r\n//     slides: PropTypes.arrayOf(\r\n//       PropTypes.shape({\r\n//         key: PropTypes.any,\r\n//         content: PropTypes.object\r\n//       })\r\n//     ).isRequired,\r\n//     goToSlide: PropTypes.number,\r\n//     showNavigation: PropTypes.bool,\r\n//     offsetRadius: PropTypes.number,\r\n//     animationConfig: PropTypes.object\r\n//   };\r\n\r\n//   static defaultProps = {\r\n//     offsetRadius: 2,\r\n//     animationConfig: { tension: 120, friction: 14 }\r\n//   };\r\n\r\n  const modBySlidesLength = (index) => {\r\n    return mod(index, props.slides.length);\r\n  };\r\n\r\n  const moveSlide = (direction) => {\r\n    setState({\r\n      index: modBySlidesLength(stateTest.index + direction),\r\n      goToSlide: null,\r\n      prevPropsGoToSlide: stateTest.prevPropsGoToSlide,\r\n      newSlide: stateTest.newSlide\r\n    });\r\n  };\r\n\r\n  const clampOffsetRadius = (offsetRadius) => {\r\n    // const slides = props.slides;\r\n    const upperBound = Math.floor((props.slides.length - 1) / 2);\r\n\r\n    if (offsetRadius < 0) {\r\n      return 0;\r\n    }\r\n    if (offsetRadius > upperBound) {\r\n      return upperBound;\r\n    }\r\n\r\n    return offsetRadius;\r\n  };\r\n\r\n  const getPresentableSlides = () => {\r\n    const { slides } = props.slides;\r\n    const { index } = stateTest.index;\r\n    let { offsetRadius } = props.offsetRadius;\r\n    offsetRadius = clampOffsetRadius(offsetRadius);\r\n    const presentableSlides = new Array();\r\n\r\n    for (let i = -offsetRadius; i < 1 + offsetRadius; i++) {\r\n      presentableSlides.push(slides[modBySlidesLength(index + i)]);\r\n    }\r\n\r\n    return presentableSlides;\r\n  }\r\n\r\n//   render() {\r\n//     const { animationConfig, offsetRadius, showNavigation } = this.props;\r\n\r\n//     let navigationButtons = null;\r\n//     if (showNavigation) {\r\n//       navigationButtons = (\r\n//         <NavigationButtons>\r\n//           <NavBtn onClick={() => this.moveSlide(1)}>&#8593;</NavBtn>\r\n//           <NavBtn onClick={() => this.moveSlide(-1)}>&#8595;</NavBtn>\r\n//         </NavigationButtons>\r\n//       );\r\n//     }\r\n  let navigationButtons = null;\r\n  if (props.showNavigation) {\r\n    navigationButtons = (\r\n      <NavigationButtons>\r\n        <NavBtn onClick={() => moveSlide(1)}>&#8593;</NavBtn>\r\n        <NavBtn onClick={() => moveSlide(-1)}>&#8595;</NavBtn>\r\n      </NavigationButtons>\r\n    );\r\n  }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Wrapper>\r\n          {/* {getPresentableSlides().map((slide, presentableIndex) => (\r\n            <Slide\r\n              key={slide.id}\r\n              content={slide.content.name}\r\n              moveSlide={moveSlide}\r\n              offsetRadius={clampOffsetRadius(props.offsetRadius)}\r\n              index={presentableIndex}\r\n              animationConfig={props.animationConfig}\r\n            />\r\n          ))} */}\r\n        </Wrapper>\r\n        {navigationButtons}\r\n      </React.Fragment>\r\n    );\r\n//   }\r\n}\r\n\r\nexport default TestVerticalCarousel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}