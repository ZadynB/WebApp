{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\WebApp\\\\my-app\\\\src\\\\StackedNavbar.js\";\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport { Drawer } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StackedNavbar(props) {\n  const drawerWidth = 240;\n  const items = props.items.split(', ');\n  const createNavLink = item => {\n    // return(<Nav.Link key={item} style={{textAlign: 'left', color: 'white'}}>{item}</Nav.Link>);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stackedNavbar\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 250\n      },\n      role: \"presentation\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          width: '100%',\n          maxWidth: 360,\n          bgcolor: 'background.paper',\n          position: 'relative',\n          overflow: 'auto',\n          maxHeight: 300,\n          '& ul': {\n            padding: 0\n          }\n        },\n        subheader: /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this),\n        children: [0, 1, 2, 3, 4].map(sectionId => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n              children: `I'm sticky ${sectionId}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), [0, 1, 2].map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `Item ${item}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)\n            }, `item-${sectionId}-${item}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, `section-${sectionId}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = StackedNavbar;\nexport default StackedNavbar;\nvar _c;\n$RefreshReg$(_c, \"StackedNavbar\");","map":{"version":3,"names":["Box","List","ListItem","ListItemButton","ListItemText","ListSubheader","Drawer","jsxDEV","_jsxDEV","StackedNavbar","props","drawerWidth","items","split","createNavLink","item","children","fileName","_jsxFileName","lineNumber","columnNumber","className","sx","width","role","maxWidth","bgcolor","position","overflow","maxHeight","padding","subheader","map","sectionId","primary","_c","$RefreshReg$"],"sources":["D:/React Projects/WebApp/my-app/src/StackedNavbar.js"],"sourcesContent":["import Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport { Drawer } from '@mui/material';\r\n\r\n\r\nfunction StackedNavbar(props) {\r\n  const drawerWidth = 240;\r\n  const items = props.items.split(', ');\r\n\r\n  const createNavLink = (item) => {\r\n    // return(<Nav.Link key={item} style={{textAlign: 'left', color: 'white'}}>{item}</Nav.Link>);\r\n    return(<p>test</p>);\r\n  }\r\n\r\n  return (\r\n    <div className='stackedNavbar'>\r\n      {/* <Nav defaultActiveKey=\"/home\" className=\"flex-column\" style={{margin: '20px 20px 20px 20px'}}>\r\n        <Nav.Item style={{textAlign: 'left'}}> Projects\r\n        {items.map((item) => createNavLink(item))}\r\n        </Nav.Item>\r\n      </Nav> */}\r\n      <Box\r\n        sx={{ width: 250}}\r\n        role=\"presentation\"\r\n      >\r\n        <List\r\n          sx={{\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            bgcolor: 'background.paper',\r\n            position: 'relative',\r\n            overflow: 'auto',\r\n            maxHeight: 300,\r\n            '& ul': { padding: 0 },\r\n          }}\r\n          subheader={<li />}\r\n        >\r\n          {[0, 1, 2, 3, 4].map((sectionId) => (\r\n            <li key={`section-${sectionId}`}>\r\n              <ul>\r\n                <ListSubheader>{`I'm sticky ${sectionId}`}</ListSubheader>\r\n                {[0, 1, 2].map((item) => (\r\n                  <ListItem key={`item-${sectionId}-${item}`}>\r\n                    <ListItemText primary={`Item ${item}`} />\r\n                  </ListItem>\r\n                ))}\r\n              </ul>\r\n            </li>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StackedNavbar;"],"mappings":";AAAA,OAAOA,GAAG,MAAM,mBAAmB;AACnC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,MAAMC,WAAW,GAAG,GAAG;EACvB,MAAMC,KAAK,GAAGF,KAAK,CAACE,KAAK,CAACC,KAAK,CAAC,IAAI,CAAC;EAErC,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC9B;IACA,oBAAOP,OAAA;MAAAQ,QAAA,EAAG;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpB,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,eAAe;IAAAL,QAAA,eAM5BR,OAAA,CAACR,GAAG;MACFsB,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAE;MAClBC,IAAI,EAAC,cAAc;MAAAR,QAAA,eAEnBR,OAAA,CAACP,IAAI;QACHqB,EAAE,EAAE;UACFC,KAAK,EAAE,MAAM;UACbE,QAAQ,EAAE,GAAG;UACbC,OAAO,EAAE,kBAAkB;UAC3BC,QAAQ,EAAE,UAAU;UACpBC,QAAQ,EAAE,MAAM;UAChBC,SAAS,EAAE,GAAG;UACd,MAAM,EAAE;YAAEC,OAAO,EAAE;UAAE;QACvB,CAAE;QACFC,SAAS,eAAEvB,OAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAE;QAAAJ,QAAA,EAEjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACgB,GAAG,CAAEC,SAAS,iBAC7BzB,OAAA;UAAAQ,QAAA,eACER,OAAA;YAAAQ,QAAA,gBACER,OAAA,CAACH,aAAa;cAAAW,QAAA,EAAG,cAAaiB,SAAU;YAAC;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgB,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACY,GAAG,CAAEjB,IAAI,iBAClBP,OAAA,CAACN,QAAQ;cAAAc,QAAA,eACPR,OAAA,CAACJ,YAAY;gBAAC8B,OAAO,EAAG,QAAOnB,IAAK;cAAE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GAD3B,QAAOa,SAAU,IAAGlB,IAAK,EAAC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEhC,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC,GARG,WAAUa,SAAU,EAAC;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAS3B,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACe,EAAA,GAhDQ1B,aAAa;AAkDtB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}