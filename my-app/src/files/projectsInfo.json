{
    "slides": [
        {
            "id": "project_1",
            "content": {
                "name": "Unity Game",
                "type": "Personal",
                "date": "January 2023",
                "tools": "C#, Unity, Git",
                "hasImage": true,
                "description": "An adventure game with 3D graphics in which you can collect items, equip armor, do some exploration and battle monsters!",
                "paragraph_1": "Growing up I fell in love with playing games to the point where even now I am still passionate about video games.They have been an integral part in my childhood with many memories of the older games bringing me joy and excitement. Particularly, I was very fascinated by the Final Fantasy Series published by Square Enix. I instantly fell in love with the turn-based strategy RPG aspect of the game which promoted the character to mix and match classes and skills together. I set out to create a game to replicate this turn-based combat system to offer as a tribute and to add some exploration in with it.",
                "paragraph_2": "This project was developed using the Unity game engine alongside the programming language C#. Through this project, I got the chance to learn cool and amazing things about game development. For instance, with coding movement of a character within the game, we had to learn/re-learn about vectors which are used to calculate the characters speed and direction. Additionally, I learned more about asynchronous functions such as Await() and WaitUntil() which were imperative for a turn-based game. The UI was simple and somewhat plain as there was a time constraint. However, it allowed me to learn about UI management using C# and Unity. To add final touches to the project, music was added to give it a more finished/complete feel. As I am enthusiastic about games, this project no doubt was so much fun to design and develop and, on top of that, the knowledge I gained from it was quite powerful."
            }
        },
        {
            "id": "project_2",
            "content": {
                "name": "Course Grapher",
                "type": "Personal",
                "date": "April 2022",
                "tools": "React, JS, HTML, CSS, Python, NGINX, Git",
                "hasImage": true,
                "description": "Coded as part of a school group project where users could navigate a web app to display a course tree graph for a particular subject, a department, or a degree.",
                "paragraph_1": "In this project, we were tasked with creating a web application which would be able to easily and effortlessly display the course tree for either a degree, department or course. In the case for a specific course, we would need to display the pre-requisites of said course. For Department, we would simply show all the courses that department offers. Finally for degree, we needed to show the mandatory courses one would need to take as well as any additional requirements needed to attain said degree. We needed actual data for any of this to work and so we decided to use University of Waterloo's data. We created a scraper program which was able to easily get course information which includes its id, description, pre-requisites, credit count and more. This data was then packaged into a json object which made it effortless to read. Before graphing, we started to develop a CLI (command line interface) which was able to perform operations on the data. This included retrieval by name, id, subject and more, filtering, outputting and exporting the data.",
                "paragraph_2": "Next came the implementation of the course grapher which was achieved through the use of pyGraphiz, a python graphing library. In order for pyGraphiz to do its job, we needed to put the data into a format which it understood. And so after sorting this data, we were able to ouput graphs. PyGraphiz was easy to use and had an advantage in that it allowed users to move nodes/children within the graph so that some relationships between courses be seen clearer. Once this was finished, we set out to finish the development of the web app by allowing users to 'enroll' in courses and then have the ability to drop them. It should be noted that this project was done within a team environment with each of us taking turns as the project lead. This was a great experience as we learned what it meant to be a team lead and even developed our coding skills. Tools which we used for this app included ReactJS, NGINX, Python, Material-UI, PyGraphiz and Flask."
            }
        },
        {
            "id": "project_3",
            "content": {
                "name": "Route Calculator",
                "type": "Personal",
                "date": "September 2021",
                "tools": "HTML, CSS, C, Git, SQL",
                "hasImage": true,
                "description": "A website made with a combination of HTML, CSS and C in order to input files with route data points and the website would compute various calculations on them.",
                "paragraph_1": "The goal of this project was to display the distances and other route information about points which were stored within a .gpx file on my webpage. Firstly, I needed to use the C programming language to act as a parser for the .gpx files. Therefore, I needed to read the file and traverse them to grab relevant information from them. Because of the format of the files, the implementation of linked lists were necessary.",
                "paragraph_2": "After parsing, the website HTML along with its CSS and JS were created so that we could display the information. Once done, users could select a .gpx file to input using a file selector. Subsequently, the file was instantly parsed and the data about the routes and tracks would be displayed. There were many operations which could be performed. These included deleting a point from the route or adding a completely new one, renaming the file, finding a path between two points as well as determine if the route is a loop or not. Overall, this project was fun and was a good entry point into using web development tools. Additionally, it enhanced my skills and knowledge of C programming."
            }
        },
        {
            "id": "project_4",
            "content": {
                "name": "Java Game",
                "type": "Personal",
                "date": "September 2020",
                "tools": "Java, Git",
                "hasImage": true,
                "description": "An 2D game in which the character can collect items, consume items, equip armor and move to different levels with a user-friendly GUI.",
                "paragraph_1": "Rogue was an already established game which was of the dungeon crawler genre where the character could interact with items, defeat monsters and explore. My goal was to recreate the basics of this game and to give it a modern looking user interface. Java was used to develop this game and to start off I wanted to dynamically read the necessary files which had crucial information pertaining to the rooms and items of the game. Therefore, a json file with a simple assignment was made so that I could easily change the file paths. Next, I needed to create Java functions to generate the rooms using the symbols from the symbols file. I needed to use JUnit tests to ensure that my functions were working correctly. Next came character movement which was simply done via assigning the keyboard arrow keys to the respective movement direction and upon each keystroke the map was generated again to simulate the idea that the character moved positions.",
                "paragraph_2": "Interacting with items came next as I needed to simulate the character walking over the item to pick it up and then leave nothing on the floor. A challenging yet fun part of this project approached in the form of simulating the character moving from one room to the next while keeping the contents of the previous room the same. This was possible because of the OO (Object-Oriented) nature of Java as I created Room objects to store this information. The somewhat modern UI (user interface) was developed using a library called java Swing. With this, users could now see their inventory, click on items, consume and throw away items. Lastly, to add a final touch the idea of Serialization was employed in order to save the game. Players could then load this save file and play the game where they left off! This project gave some necessary entry level knowledge about OOPs as well as some experience in designing user friendly interfaces."
            }
        },
        {
            "id": "project_5",
            "content": {
                "name": "Personal Web App",
                "type": "Personal",
                "date": "In Progress",
                "tools": "HTML, CSS, React, JavaScript, NodeJS, Git",
                "hasImage": false,
                "description": "A web application created to talk about myself and showcase all the projects I have worked on and to display future applications that people can use.",
                "paragraph_1": "This web application was developed using ReactJS, HTML, CSS and JavaScript currently. In the future, I am aiming to incorporate NodeJS as well as some SQL with it to give it a complete full stack concept. Its purpose will be to showcase the various projects I was involved in and the future projects that I will develop. Currently, one module which I have gained an interest in was react-spring. This is a physics based api which allows you to add transitions to objects or add animations to them and give them a more lively feel. For these reasons, this module has garnered a lot of use and recognition as an amazing tool to improve your React apps."
            }
        }
    ]
}